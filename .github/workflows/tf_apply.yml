name: "Terraform Apply"

on:
  push:
    branches:
      - main

env:
  TERRAFORM_VERSION: 1.0.3
  TERRAGRUNT_VERSION: v0.31.1
  TF_VAR_slack_token: ${{ secrets.SLACK_TOKEN }}
  TF_VAR_app_token: ${{ secrets.APP_TOKEN }}
  TF_VAR_sre_drive_id: ${{ secrets.SRE_DRIVE_ID }}
  TF_VAR_sre_incident_folder: ${{ secrets.SRE_INCIDENT_FOLDER }}
  TF_VAR_sre_incident_template: ${{ secrets.INCIDENT_TEMPLATE }}
  TF_VAR_sre_incident_list: ${{ secrets.INCIDENT_LIST }}
  TF_VAR_slack_incident_channel: ${{ secrets.INCIDENT_CHANNEL }}
  TF_VAR_pickle_string: ${{ secrets.PICKLE_STRING }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ca-central-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir -p bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::283582579564:role/SREBotTerraformAdministratorRole
          role-session-name: SREBotGitHubActions
          aws-region: "ca-central-1"

      - name: Terraform Apply
        working-directory: terraform
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve
